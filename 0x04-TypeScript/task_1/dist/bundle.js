!function(e){var o={};function t(n){if(o[n])return o[n].exports;var r=o[n]={i:n,l:!1,exports:{}};return e[n].call(r.exports,r,r.exports,t),r.l=!0,r.exports}t.m=e,t.c=o,t.d=function(e,o,n){t.o(e,o)||Object.defineProperty(e,o,{enumerable:!0,get:n})},t.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},t.t=function(e,o){if(1&o&&(e=t(e)),8&o)return e;if(4&o&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(t.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&o&&"string"!=typeof e)for(var r in e)t.d(n,r,function(o){return e[o]}.bind(null,r));return n},t.n=function(e){var o=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(o,"a",o),o},t.o=function(e,o){return Object.prototype.hasOwnProperty.call(e,o)},t.p="",t(t.s=0)}([function(e,o){var t;console.log({firstName:"John",lastName:"Doe",fullTimeEmployee:!0,location:"Nairobi",contract:!1}),console.log({firstName:"Jane",lastName:"Smith",fullTimeEmployee:!0,location:"Mombasa",numberOfReports:5,contract:!0}),console.log((t="Doe","John".charAt(0)+". "+t));var n=new(function(){function e(e,o){this.firstName=e,this.lastName=o}return e.prototype.workOnHomework=function(){return"Currently working"},e.prototype.displayName=function(){return this.firstName},e}())("John","Doe");console.log(n.displayName()),console.log(n.workOnHomework())}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,